@using AvenueClothing.Models;
@using ClientDependency;
@using ClientDependency.Core.Mvc
@inherits Umbraco.Web.Mvc.UmbracoViewPage<CategoryViewModel>
@{
    Layout = "Layout.cshtml";
    // Html.RequiresJs("~/Scripts/uCommerce.category.js");
}

<div class="hero-unit mb-4">
    @if (!string.IsNullOrEmpty(Model.BannerImageUrl))
    {
        <img class="w-100" src="@Model.BannerImageUrl">
    }

    <div class="container">
        <h1 class="text-light text-uppercase">@Model.Name</h1>
    </div>
</div>

@Html.HiddenFor(x => x.CatalogId, new { id = "catalog-id" })
@Html.HiddenFor(x => x.CategoryId, new { id = "category-id" })

<div class="container mb-4">
    <aside class="filterbar d-flex flex-wrap justify-content-between mb-4">
        @Umbraco.RenderMacro("UcommerceFacets")

        <div class="dropdown d-inline-flex align-items-center">
            <select id="resultsToShow">
                <option>12</option>
                <option>24</option>
                <option>48</option>
                <option>96</option>
            </select>
            <label for="resultsToShow">Per page</label>
        </div>
    </aside>

    <div class="product-list">
        @foreach (var product in Model.Products)
        {
            <a href="@product.Url" id="@product.Sku" class="product mb-3">
                <div class="product-image mb-3">
                    @if (!string.IsNullOrEmpty(product.ThumbnailImageUrl))
                    {
                        <img class="img-fluid" src="@product.ThumbnailImageUrl">
                    }
                </div>

                <div class="mx-2">
                    <p class="mb-1 text-truncate">
                        @product.Name
                    </p>
                    <p class="mb-1">
                        <strong>@product.Price</strong>
                    </p>
                </div>
            </a>
        }
    </div>

    <div class="d-flex justify-content-center">
        <button class="btn btn-outline-dark btn-hide-expanded mb-3" type="button" data-toggle="collapse" data-target="#additional-products" aria-controls="additional-products" aria-expanded="false">
            load more products
        </button>
    </div>

    <div id="additional-products" class="collapse">
        <div class="product-list">
            @foreach (var product in Model.Products)
            {
                <a href="@product.Url" id="@product.Sku" class="product mb-3">
                    <div class="product-image mb-3">
                        @if (!string.IsNullOrEmpty(product.ThumbnailImageUrl))
                        {
                            <img class="img-fluid" src="@product.ThumbnailImageUrl">
                        }
                    </div>

                    <div class="mx-2">
                        <p class="mb-1 text-truncate">
                            @product.Name
                        </p>
                        <p class="mb-1">
                            <strong>@product.Price</strong>
                        </p>
                    </div>
                </a>
            }
        </div>
    </div>

    <nav class="page-navigation text-center mb-3" aria-label="Page navigation">
        <h6 class="mb-3"><span class="text-uppercase">Showing </span>@Model.Products.Count of @Model.TotalProducts items</h6>
        <ul class="pagination mb-5 justify-content-center">
            @if (Model.PageSize <= Model.TotalProducts)
            {
                for (int i = 1; i < Math.Ceiling((double)Model.TotalProducts / Model.PageSize) + 1; i++)
                {
                    if (Model.PageNumber == i)
                    {
                        <li class="current"><a href="?pg=@i&size=@Model.PageSize">@i</a></li>
                    }
                    else
                    {
                        <li><a href="?pg=@i&size=@Model.PageSize">@i</a></li>
                    }
                }
            }
        </ul>
    </nav>
</div>
